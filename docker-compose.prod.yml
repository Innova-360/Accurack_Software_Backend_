services:
  # Backend Production Server
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=production
    image: accurack-backend:prod
    container_name: accurack_backend_prod
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=production
      # Database connection (use your RDS endpoint)
      - DATABASE_URL=${DATABASE_URL}
      # Security
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      # Application settings
      - FRONTEND_URL=${FRONTEND_URL:-https://yourdomain.com}
      - PORT=4000
      # Email configuration
      - GMAIL_CLIENT_ID=${GMAIL_CLIENT_ID}
      - GMAIL_CLIENT_SECRET=${GMAIL_CLIENT_SECRET}
      - GMAIL_REDIRECT_URI=${GMAIL_REDIRECT_URI}
      - JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN:-24h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      # Google OAuth
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      # Memory optimization for t2.micro
      - NODE_OPTIONS=--max-old-space-size=768
    volumes:
      # Only mount logs and uploads (no source code in production)
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - accurack-prod-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/api/v1/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 768M
        reservations:
          memory: 512M
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Nginx Reverse Proxy (Optional - for SSL/Load Balancing)
  nginx:
    image: nginx:alpine
    container_name: accurack_nginx_prod
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - accurack-prod-network
    restart: unless-stopped
    profiles:
      - nginx # Only start with: docker-compose --profile nginx up

networks:
  accurack-prod-network:
    driver: bridge
    name: accurack-prod-network

volumes:
  app_logs:
    driver: local
    name: accurack_app_logs
  app_uploads:
    driver: local
    name: accurack_app_uploads
  nginx_logs:
    driver: local
    name: accurack_nginx_logs
