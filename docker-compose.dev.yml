services:
  # Backend Development Server
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: accurack-backend:dev
    container_name: accurack_backend_dev
    ports:
      - '4000:4000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://accurack_admin:secure_password_123@postgres:5432/accurack_master
      - JWT_SECRET=dev-jwt-secret-key-for-development-only
      - JWT_REFRESH_SECRET=dev-refresh-secret-key-for-development-only
      - FRONTEND_URL=http://localhost:5173
      - PORT=4000
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json
      # Prevent overwriting node_modules
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - accurack-dev-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # PostgreSQL Database for Development
  postgres:
    image: postgres:16-alpine
    container_name: accurack_postgres_dev
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: accurack_admin
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: accurack_master
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U accurack_admin -d accurack_master']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - accurack-dev-network
    restart: unless-stopped

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: accurack_pgadmin_dev
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@accurack.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - accurack-dev-network
    restart: unless-stopped
    profiles:
      - tools # Only start with: docker-compose --profile tools up

networks:
  accurack-dev-network:
    driver: bridge
    name: accurack-dev-network

volumes:
  postgres_dev_data:
    driver: local
    name: accurack_postgres_dev_data
  pgadmin_dev_data:
    driver: local
    name: accurack_pgadmin_dev_data
