services:
  # Backend Development Server
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: accurack-backend:dev
    container_name: accurack_backend_dev
    ports:
      - '4000:4000'
    environment:
      # Application Settings
      - NODE_ENV=development
      - PORT=4000
      - FRONTEND_URL=http://localhost:5173

      # Database Configuration
      - DATABASE_URL=postgresql://accurack_admin:secure_password_123@postgres:5432/accurack_master
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=accurack_admin
      - DB_PASSWORD=secure_password_123
      - DB_NAME=accurack_master

      # JWT Configuration
      - JWT_SECRET=a-strong-jwt-secret-at-least-256-bits-long-for-access-tokens-1234567890abcdef
      - JWT_REFRESH_SECRET=a-different-strong-refresh-secret-at-least-256-bits-long-0987654321fedcba
      - JWT_ACCESS_EXPIRES_IN=24h
      - JWT_REFRESH_EXPIRES_IN=7d

      # Encryption
      - ENCRYPTION_KEY=your_32_character_encryption_key_sdfdfasdffdsfasd

      # Google OAuth Configuration
      - GOOGLE_CLIENT_ID=622044624343-0n0754c6qhcfpdvp3rphcmdt8suolc8d.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_CALLBACK_URL=http://localhost:4000/api/v1/auth/google/callback

      # Gmail/Email Configuration
      - GMAIL_CLIENT_ID=697924736978-gdphb1g4l8u6she76t5ghulc9qu8njrn.apps.googleusercontent.com
      - GMAIL_CLIENT_SECRET=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
      - GMAIL_REDIRECT_URI=https://developers.google.com/oauthplayground
      - GMAIL_REFRESH_TOKEN=1//04-r5Kj7A6rv8CgYIARAAGAQSNwF-L9IrxeSvl0uuLrZ9WzUX2oMLJA_-4HWyN2y1YC2CiyremCi6wtvsSUm1RziWBfLieDywrTQ
      - GMAIL_USER=accurackllc@gmail.com
      - GMAIL_APP_PASSWORD=oqubytczixgizall

      # SMTP Configuration (fallback)
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=accurackllc@gmail.com
      - SMTP_PASS=oqubytczixgizall
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nest-cli.json:/app/nest-cli.json
      # Prevent overwriting node_modules
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - accurack-dev-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # PostgreSQL Database for Development
  postgres:
    image: postgres:16-alpine
    container_name: accurack_postgres_dev
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: accurack_admin
      POSTGRES_PASSWORD: secure_password_123
      POSTGRES_DB: accurack_master
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U accurack_admin -d accurack_master']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - accurack-dev-network
    restart: unless-stopped

  # pgAdmin for Database Management (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: accurack_pgadmin_dev
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@accurack.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - accurack-dev-network
    restart: unless-stopped
    profiles:
      - tools # Only start with: docker-compose --profile tools up

networks:
  accurack-dev-network:
    driver: bridge
    name: accurack-dev-network

volumes:
  postgres_dev_data:
    driver: local
    name: accurack_postgres_dev_data
  pgadmin_dev_data:
    driver: local
    name: accurack_pgadmin_dev_data
